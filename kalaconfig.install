<?php

/**
 * @file
 * Un/Installation and update hooks for the kalaconfig project.
 */

use Drupal\kalaconfig\KalaUtil;
use Drupal\Core\Form\FormState;
use Drupal\config_direct_save\Form\UpdateConfigurationForm;

/**
 * Installation tasks for the Kalaconfig module.
 */
function kalaconfig_install() {

  // Delete the "article" node type so the Comment module can be uninstalled.
  KalaUtil::deleteContentType('article');

  // Delete all shortcut entities to allow uninstalling the Shortcut module.
  KalaUtil::deleteAllEntitiesOfType('shortcut');

  // Uninstall core modules that are undesirable or managed by Config Split.
  \Drupal::service('module_installer')->uninstall([
    'color',
    'comment',
    'contact',
    'dblog',
    'dynamic_page_cache',
    'history',
    'page_cache',
    'shortcut',
    'tour',
    'views_ui',
  ]);

  // Export the site's config by mocking the Config Direct Save module's form.
  // Don't use the Config Split CLI service to execute the config export as it
  // will delete any files in the confg split directories not yet imported
  // (i.e., the ones committed to the code repository we want to import next).
  $form = [];
  $form_state = new FormState();
  $form_state->setValue('config_directory', '../config/sync');
  $config_direct_save = new UpdateConfigurationForm(
    \Drupal::service('config.storage'), \Drupal::service('config.manager'));
  $config_direct_save->createConfigFiles($form, $form_state);

  // Execute a config import to trigger Config Split to turn on the modules and
  // configuration for this environment (devel for the dev environment, etc.).
  $config_split = \Drupal::service('config_split.cli');
  $config_split->import(\Drupal::service('config.storage.sync'));

  // Now that the split configuration has been imported, we can delete the "all"
  // config split, which simply provides a vehicle for importing saved config.
  Drupal::configFactory()->getEditable('config_split.config_split.all.yml')->delete();

  // This module's work is done, so turn it off. Register the uninstallation as
  // a shutdown function rather than invoking it immediately to allow this
  // module installation to wrap up cleanly.
  drupal_register_shutdown_function(function () use ($config_split) {

    // Uninstall the kalaconfig module as it is no longer needed.
    // n.b. Reusing the same instance of the module_installer service from
    // earlier causes problems here, so don't use a variable and just load the
    // service from the container again.
    \Drupal::service('module_installer')->uninstall(['kalaconfig']);

    // Export config again to capture the uninstallation of kalaconfig.
    // n.b. Reusing the same instance of the config.storage.sync service from
    // earlier causes the configs to not export as expected, so just load the
    // service from the container every time it's needed.
    $config_split->export(\Drupal::service('config.storage.sync'));
  });
}
